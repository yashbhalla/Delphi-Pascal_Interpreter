// Generated from src/delphi.g4 by ANTLR 4.9.3
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class delphiLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9.3", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		AND=10, ARRAY=11, BEGIN=12, BOOLEAN=13, CASE=14, CHAR=15, CHR=16, CONST=17, 
		DIV=18, DO=19, DOWNTO=20, ELSE=21, END=22, FILE=23, FOR=24, FUNCTION=25, 
		GOTO=26, IF=27, IN=28, INTEGER=29, LABEL=30, MOD=31, NIL=32, NOT=33, OF=34, 
		OR=35, PACKED=36, PROCEDURE=37, PROGRAM=38, REAL=39, RECORD=40, REPEAT=41, 
		SET=42, THEN=43, TO=44, TYPE=45, UNTIL=46, VAR=47, WHILE=48, WITH=49, 
		PLUS=50, MINUS=51, STAR=52, SLASH=53, ASSIGN=54, COMMA=55, SEMI=56, COLON=57, 
		EQUAL=58, NOT_EQUAL=59, LT=60, LE=61, GE=62, GT=63, LPAREN=64, RPAREN=65, 
		LBRACK=66, LBRACK2=67, RBRACK=68, RBRACK2=69, POINTER=70, AT=71, DOT=72, 
		DOTDOT=73, LCURLY=74, RCURLY=75, UNIT=76, INTERFACE=77, USES=78, STRING=79, 
		IMPLEMENTATION=80, TRUE=81, FALSE=82, WS=83, COMMENT_1=84, COMMENT_2=85, 
		IDENT=86, STRING_LITERAL=87, NUM_INT=88, NUM_REAL=89;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"AND", "ARRAY", "BEGIN", "BOOLEAN", "CASE", "CHAR", "CHR", "CONST", "DIV", 
			"DO", "DOWNTO", "ELSE", "END", "FILE", "FOR", "FUNCTION", "GOTO", "IF", 
			"IN", "INTEGER", "LABEL", "MOD", "NIL", "NOT", "OF", "OR", "PACKED", 
			"PROCEDURE", "PROGRAM", "REAL", "RECORD", "REPEAT", "SET", "THEN", "TO", 
			"TYPE", "UNTIL", "VAR", "WHILE", "WITH", "PLUS", "MINUS", "STAR", "SLASH", 
			"ASSIGN", "COMMA", "SEMI", "COLON", "EQUAL", "NOT_EQUAL", "LT", "LE", 
			"GE", "GT", "LPAREN", "RPAREN", "LBRACK", "LBRACK2", "RBRACK", "RBRACK2", 
			"POINTER", "AT", "DOT", "DOTDOT", "LCURLY", "RCURLY", "UNIT", "INTERFACE", 
			"USES", "STRING", "IMPLEMENTATION", "TRUE", "FALSE", "WS", "COMMENT_1", 
			"COMMENT_2", "IDENT", "STRING_LITERAL", "NUM_INT", "NUM_REAL", "EXPONENT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'constructor'", "'destructor'", "'private'", "'public'", "'new'", 
			"'begin'", "'end'", "'procedure'", "'function'", "'AND'", "'ARRAY'", 
			"'BEGIN'", "'BOOLEAN'", "'CASE'", "'CHAR'", "'CHR'", "'CONST'", "'DIV'", 
			"'DO'", "'DOWNTO'", "'ELSE'", "'END'", "'FILE'", "'FOR'", "'FUNCTION'", 
			"'GOTO'", "'IF'", "'IN'", "'INTEGER'", "'LABEL'", "'MOD'", "'NIL'", "'NOT'", 
			"'OF'", "'OR'", "'PACKED'", "'PROCEDURE'", "'PROGRAM'", "'REAL'", "'RECORD'", 
			"'REPEAT'", "'SET'", "'THEN'", "'TO'", "'TYPE'", "'UNTIL'", "'VAR'", 
			"'WHILE'", "'WITH'", "'+'", "'-'", "'*'", "'/'", "':='", "','", "';'", 
			"':'", "'='", "'<>'", "'<'", "'<='", "'>='", "'>'", "'('", "')'", "'['", 
			"'(.'", "']'", "'.)'", "'^'", "'@'", "'.'", "'..'", "'{'", "'}'", "'UNIT'", 
			"'INTERFACE'", "'USES'", "'STRING'", "'IMPLEMENTATION'", "'TRUE'", "'FALSE'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, "AND", "ARRAY", 
			"BEGIN", "BOOLEAN", "CASE", "CHAR", "CHR", "CONST", "DIV", "DO", "DOWNTO", 
			"ELSE", "END", "FILE", "FOR", "FUNCTION", "GOTO", "IF", "IN", "INTEGER", 
			"LABEL", "MOD", "NIL", "NOT", "OF", "OR", "PACKED", "PROCEDURE", "PROGRAM", 
			"REAL", "RECORD", "REPEAT", "SET", "THEN", "TO", "TYPE", "UNTIL", "VAR", 
			"WHILE", "WITH", "PLUS", "MINUS", "STAR", "SLASH", "ASSIGN", "COMMA", 
			"SEMI", "COLON", "EQUAL", "NOT_EQUAL", "LT", "LE", "GE", "GT", "LPAREN", 
			"RPAREN", "LBRACK", "LBRACK2", "RBRACK", "RBRACK2", "POINTER", "AT", 
			"DOT", "DOTDOT", "LCURLY", "RCURLY", "UNIT", "INTERFACE", "USES", "STRING", 
			"IMPLEMENTATION", "TRUE", "FALSE", "WS", "COMMENT_1", "COMMENT_2", "IDENT", 
			"STRING_LITERAL", "NUM_INT", "NUM_REAL"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public delphiLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "delphi.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2[\u0290\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\4Z\tZ\4[\t[\3\2\3\2\3\2\3\2\3\2\3\2\3\2"+
		"\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3"+
		"\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6"+
		"\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3"+
		"\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\f"+
		"\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16"+
		"\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21"+
		"\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24"+
		"\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26"+
		"\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\32"+
		"\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\34"+
		"\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37"+
		"\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3!\3!\3!\3!\3\"\3\"\3\"\3\"\3#\3"+
		"#\3#\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3\'\3"+
		"\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3*\3*\3"+
		"*\3*\3*\3*\3*\3+\3+\3+\3+\3,\3,\3,\3,\3,\3-\3-\3-\3.\3.\3.\3.\3.\3/\3"+
		"/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3\61\3\62\3"+
		"\62\3\62\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67\3"+
		"\67\38\38\39\39\3:\3:\3;\3;\3<\3<\3<\3=\3=\3>\3>\3>\3?\3?\3?\3@\3@\3A"+
		"\3A\3B\3B\3C\3C\3D\3D\3D\3E\3E\3F\3F\3F\3G\3G\3H\3H\3I\3I\3J\3J\3J\3K"+
		"\3K\3L\3L\3M\3M\3M\3M\3M\3N\3N\3N\3N\3N\3N\3N\3N\3N\3N\3O\3O\3O\3O\3O"+
		"\3P\3P\3P\3P\3P\3P\3P\3Q\3Q\3Q\3Q\3Q\3Q\3Q\3Q\3Q\3Q\3Q\3Q\3Q\3Q\3Q\3R"+
		"\3R\3R\3R\3R\3S\3S\3S\3S\3S\3S\3T\3T\3T\3T\3U\3U\3U\3U\7U\u0249\nU\fU"+
		"\16U\u024c\13U\3U\3U\3U\3U\3U\3V\3V\7V\u0255\nV\fV\16V\u0258\13V\3V\3"+
		"V\3V\3V\3W\3W\7W\u0260\nW\fW\16W\u0263\13W\3X\3X\3X\3X\7X\u0269\nX\fX"+
		"\16X\u026c\13X\3X\3X\3Y\6Y\u0271\nY\rY\16Y\u0272\3Z\6Z\u0276\nZ\rZ\16"+
		"Z\u0277\3Z\3Z\6Z\u027c\nZ\rZ\16Z\u027d\3Z\5Z\u0281\nZ\5Z\u0283\nZ\3Z\5"+
		"Z\u0286\nZ\3[\3[\5[\u028a\n[\3[\6[\u028d\n[\r[\16[\u028e\4\u024a\u0256"+
		"\2\\\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35"+
		"\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36"+
		";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67"+
		"m8o9q:s;u<w=y>{?}@\177A\u0081B\u0083C\u0085D\u0087E\u0089F\u008bG\u008d"+
		"H\u008fI\u0091J\u0093K\u0095L\u0097M\u0099N\u009bO\u009dP\u009fQ\u00a1"+
		"R\u00a3S\u00a5T\u00a7U\u00a9V\u00abW\u00adX\u00afY\u00b1Z\u00b3[\u00b5"+
		"\2\3\2\6\5\2\13\f\17\17\"\"\5\2\62;C\\aa\3\2))\4\2--//\2\u029b\2\3\3\2"+
		"\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17"+
		"\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2"+
		"\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3"+
		"\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3"+
		"\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2"+
		"=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3"+
		"\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2"+
		"\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2"+
		"c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3"+
		"\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2"+
		"\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3"+
		"\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2"+
		"\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\2\u0097"+
		"\3\2\2\2\2\u0099\3\2\2\2\2\u009b\3\2\2\2\2\u009d\3\2\2\2\2\u009f\3\2\2"+
		"\2\2\u00a1\3\2\2\2\2\u00a3\3\2\2\2\2\u00a5\3\2\2\2\2\u00a7\3\2\2\2\2\u00a9"+
		"\3\2\2\2\2\u00ab\3\2\2\2\2\u00ad\3\2\2\2\2\u00af\3\2\2\2\2\u00b1\3\2\2"+
		"\2\2\u00b3\3\2\2\2\3\u00b7\3\2\2\2\5\u00c3\3\2\2\2\7\u00ce\3\2\2\2\t\u00d6"+
		"\3\2\2\2\13\u00dd\3\2\2\2\r\u00e1\3\2\2\2\17\u00e7\3\2\2\2\21\u00eb\3"+
		"\2\2\2\23\u00f5\3\2\2\2\25\u00fe\3\2\2\2\27\u0102\3\2\2\2\31\u0108\3\2"+
		"\2\2\33\u010e\3\2\2\2\35\u0116\3\2\2\2\37\u011b\3\2\2\2!\u0120\3\2\2\2"+
		"#\u0124\3\2\2\2%\u012a\3\2\2\2\'\u012e\3\2\2\2)\u0131\3\2\2\2+\u0138\3"+
		"\2\2\2-\u013d\3\2\2\2/\u0141\3\2\2\2\61\u0146\3\2\2\2\63\u014a\3\2\2\2"+
		"\65\u0153\3\2\2\2\67\u0158\3\2\2\29\u015b\3\2\2\2;\u015e\3\2\2\2=\u0166"+
		"\3\2\2\2?\u016c\3\2\2\2A\u0170\3\2\2\2C\u0174\3\2\2\2E\u0178\3\2\2\2G"+
		"\u017b\3\2\2\2I\u017e\3\2\2\2K\u0185\3\2\2\2M\u018f\3\2\2\2O\u0197\3\2"+
		"\2\2Q\u019c\3\2\2\2S\u01a3\3\2\2\2U\u01aa\3\2\2\2W\u01ae\3\2\2\2Y\u01b3"+
		"\3\2\2\2[\u01b6\3\2\2\2]\u01bb\3\2\2\2_\u01c1\3\2\2\2a\u01c5\3\2\2\2c"+
		"\u01cb\3\2\2\2e\u01d0\3\2\2\2g\u01d2\3\2\2\2i\u01d4\3\2\2\2k\u01d6\3\2"+
		"\2\2m\u01d8\3\2\2\2o\u01db\3\2\2\2q\u01dd\3\2\2\2s\u01df\3\2\2\2u\u01e1"+
		"\3\2\2\2w\u01e3\3\2\2\2y\u01e6\3\2\2\2{\u01e8\3\2\2\2}\u01eb\3\2\2\2\177"+
		"\u01ee\3\2\2\2\u0081\u01f0\3\2\2\2\u0083\u01f2\3\2\2\2\u0085\u01f4\3\2"+
		"\2\2\u0087\u01f6\3\2\2\2\u0089\u01f9\3\2\2\2\u008b\u01fb\3\2\2\2\u008d"+
		"\u01fe\3\2\2\2\u008f\u0200\3\2\2\2\u0091\u0202\3\2\2\2\u0093\u0204\3\2"+
		"\2\2\u0095\u0207\3\2\2\2\u0097\u0209\3\2\2\2\u0099\u020b\3\2\2\2\u009b"+
		"\u0210\3\2\2\2\u009d\u021a\3\2\2\2\u009f\u021f\3\2\2\2\u00a1\u0226\3\2"+
		"\2\2\u00a3\u0235\3\2\2\2\u00a5\u023a\3\2\2\2\u00a7\u0240\3\2\2\2\u00a9"+
		"\u0244\3\2\2\2\u00ab\u0252\3\2\2\2\u00ad\u025d\3\2\2\2\u00af\u0264\3\2"+
		"\2\2\u00b1\u0270\3\2\2\2\u00b3\u0275\3\2\2\2\u00b5\u0287\3\2\2\2\u00b7"+
		"\u00b8\7e\2\2\u00b8\u00b9\7q\2\2\u00b9\u00ba\7p\2\2\u00ba\u00bb\7u\2\2"+
		"\u00bb\u00bc\7v\2\2\u00bc\u00bd\7t\2\2\u00bd\u00be\7w\2\2\u00be\u00bf"+
		"\7e\2\2\u00bf\u00c0\7v\2\2\u00c0\u00c1\7q\2\2\u00c1\u00c2\7t\2\2\u00c2"+
		"\4\3\2\2\2\u00c3\u00c4\7f\2\2\u00c4\u00c5\7g\2\2\u00c5\u00c6\7u\2\2\u00c6"+
		"\u00c7\7v\2\2\u00c7\u00c8\7t\2\2\u00c8\u00c9\7w\2\2\u00c9\u00ca\7e\2\2"+
		"\u00ca\u00cb\7v\2\2\u00cb\u00cc\7q\2\2\u00cc\u00cd\7t\2\2\u00cd\6\3\2"+
		"\2\2\u00ce\u00cf\7r\2\2\u00cf\u00d0\7t\2\2\u00d0\u00d1\7k\2\2\u00d1\u00d2"+
		"\7x\2\2\u00d2\u00d3\7c\2\2\u00d3\u00d4\7v\2\2\u00d4\u00d5\7g\2\2\u00d5"+
		"\b\3\2\2\2\u00d6\u00d7\7r\2\2\u00d7\u00d8\7w\2\2\u00d8\u00d9\7d\2\2\u00d9"+
		"\u00da\7n\2\2\u00da\u00db\7k\2\2\u00db\u00dc\7e\2\2\u00dc\n\3\2\2\2\u00dd"+
		"\u00de\7p\2\2\u00de\u00df\7g\2\2\u00df\u00e0\7y\2\2\u00e0\f\3\2\2\2\u00e1"+
		"\u00e2\7d\2\2\u00e2\u00e3\7g\2\2\u00e3\u00e4\7i\2\2\u00e4\u00e5\7k\2\2"+
		"\u00e5\u00e6\7p\2\2\u00e6\16\3\2\2\2\u00e7\u00e8\7g\2\2\u00e8\u00e9\7"+
		"p\2\2\u00e9\u00ea\7f\2\2\u00ea\20\3\2\2\2\u00eb\u00ec\7r\2\2\u00ec\u00ed"+
		"\7t\2\2\u00ed\u00ee\7q\2\2\u00ee\u00ef\7e\2\2\u00ef\u00f0\7g\2\2\u00f0"+
		"\u00f1\7f\2\2\u00f1\u00f2\7w\2\2\u00f2\u00f3\7t\2\2\u00f3\u00f4\7g\2\2"+
		"\u00f4\22\3\2\2\2\u00f5\u00f6\7h\2\2\u00f6\u00f7\7w\2\2\u00f7\u00f8\7"+
		"p\2\2\u00f8\u00f9\7e\2\2\u00f9\u00fa\7v\2\2\u00fa\u00fb\7k\2\2\u00fb\u00fc"+
		"\7q\2\2\u00fc\u00fd\7p\2\2\u00fd\24\3\2\2\2\u00fe\u00ff\7C\2\2\u00ff\u0100"+
		"\7P\2\2\u0100\u0101\7F\2\2\u0101\26\3\2\2\2\u0102\u0103\7C\2\2\u0103\u0104"+
		"\7T\2\2\u0104\u0105\7T\2\2\u0105\u0106\7C\2\2\u0106\u0107\7[\2\2\u0107"+
		"\30\3\2\2\2\u0108\u0109\7D\2\2\u0109\u010a\7G\2\2\u010a\u010b\7I\2\2\u010b"+
		"\u010c\7K\2\2\u010c\u010d\7P\2\2\u010d\32\3\2\2\2\u010e\u010f\7D\2\2\u010f"+
		"\u0110\7Q\2\2\u0110\u0111\7Q\2\2\u0111\u0112\7N\2\2\u0112\u0113\7G\2\2"+
		"\u0113\u0114\7C\2\2\u0114\u0115\7P\2\2\u0115\34\3\2\2\2\u0116\u0117\7"+
		"E\2\2\u0117\u0118\7C\2\2\u0118\u0119\7U\2\2\u0119\u011a\7G\2\2\u011a\36"+
		"\3\2\2\2\u011b\u011c\7E\2\2\u011c\u011d\7J\2\2\u011d\u011e\7C\2\2\u011e"+
		"\u011f\7T\2\2\u011f \3\2\2\2\u0120\u0121\7E\2\2\u0121\u0122\7J\2\2\u0122"+
		"\u0123\7T\2\2\u0123\"\3\2\2\2\u0124\u0125\7E\2\2\u0125\u0126\7Q\2\2\u0126"+
		"\u0127\7P\2\2\u0127\u0128\7U\2\2\u0128\u0129\7V\2\2\u0129$\3\2\2\2\u012a"+
		"\u012b\7F\2\2\u012b\u012c\7K\2\2\u012c\u012d\7X\2\2\u012d&\3\2\2\2\u012e"+
		"\u012f\7F\2\2\u012f\u0130\7Q\2\2\u0130(\3\2\2\2\u0131\u0132\7F\2\2\u0132"+
		"\u0133\7Q\2\2\u0133\u0134\7Y\2\2\u0134\u0135\7P\2\2\u0135\u0136\7V\2\2"+
		"\u0136\u0137\7Q\2\2\u0137*\3\2\2\2\u0138\u0139\7G\2\2\u0139\u013a\7N\2"+
		"\2\u013a\u013b\7U\2\2\u013b\u013c\7G\2\2\u013c,\3\2\2\2\u013d\u013e\7"+
		"G\2\2\u013e\u013f\7P\2\2\u013f\u0140\7F\2\2\u0140.\3\2\2\2\u0141\u0142"+
		"\7H\2\2\u0142\u0143\7K\2\2\u0143\u0144\7N\2\2\u0144\u0145\7G\2\2\u0145"+
		"\60\3\2\2\2\u0146\u0147\7H\2\2\u0147\u0148\7Q\2\2\u0148\u0149\7T\2\2\u0149"+
		"\62\3\2\2\2\u014a\u014b\7H\2\2\u014b\u014c\7W\2\2\u014c\u014d\7P\2\2\u014d"+
		"\u014e\7E\2\2\u014e\u014f\7V\2\2\u014f\u0150\7K\2\2\u0150\u0151\7Q\2\2"+
		"\u0151\u0152\7P\2\2\u0152\64\3\2\2\2\u0153\u0154\7I\2\2\u0154\u0155\7"+
		"Q\2\2\u0155\u0156\7V\2\2\u0156\u0157\7Q\2\2\u0157\66\3\2\2\2\u0158\u0159"+
		"\7K\2\2\u0159\u015a\7H\2\2\u015a8\3\2\2\2\u015b\u015c\7K\2\2\u015c\u015d"+
		"\7P\2\2\u015d:\3\2\2\2\u015e\u015f\7K\2\2\u015f\u0160\7P\2\2\u0160\u0161"+
		"\7V\2\2\u0161\u0162\7G\2\2\u0162\u0163\7I\2\2\u0163\u0164\7G\2\2\u0164"+
		"\u0165\7T\2\2\u0165<\3\2\2\2\u0166\u0167\7N\2\2\u0167\u0168\7C\2\2\u0168"+
		"\u0169\7D\2\2\u0169\u016a\7G\2\2\u016a\u016b\7N\2\2\u016b>\3\2\2\2\u016c"+
		"\u016d\7O\2\2\u016d\u016e\7Q\2\2\u016e\u016f\7F\2\2\u016f@\3\2\2\2\u0170"+
		"\u0171\7P\2\2\u0171\u0172\7K\2\2\u0172\u0173\7N\2\2\u0173B\3\2\2\2\u0174"+
		"\u0175\7P\2\2\u0175\u0176\7Q\2\2\u0176\u0177\7V\2\2\u0177D\3\2\2\2\u0178"+
		"\u0179\7Q\2\2\u0179\u017a\7H\2\2\u017aF\3\2\2\2\u017b\u017c\7Q\2\2\u017c"+
		"\u017d\7T\2\2\u017dH\3\2\2\2\u017e\u017f\7R\2\2\u017f\u0180\7C\2\2\u0180"+
		"\u0181\7E\2\2\u0181\u0182\7M\2\2\u0182\u0183\7G\2\2\u0183\u0184\7F\2\2"+
		"\u0184J\3\2\2\2\u0185\u0186\7R\2\2\u0186\u0187\7T\2\2\u0187\u0188\7Q\2"+
		"\2\u0188\u0189\7E\2\2\u0189\u018a\7G\2\2\u018a\u018b\7F\2\2\u018b\u018c"+
		"\7W\2\2\u018c\u018d\7T\2\2\u018d\u018e\7G\2\2\u018eL\3\2\2\2\u018f\u0190"+
		"\7R\2\2\u0190\u0191\7T\2\2\u0191\u0192\7Q\2\2\u0192\u0193\7I\2\2\u0193"+
		"\u0194\7T\2\2\u0194\u0195\7C\2\2\u0195\u0196\7O\2\2\u0196N\3\2\2\2\u0197"+
		"\u0198\7T\2\2\u0198\u0199\7G\2\2\u0199\u019a\7C\2\2\u019a\u019b\7N\2\2"+
		"\u019bP\3\2\2\2\u019c\u019d\7T\2\2\u019d\u019e\7G\2\2\u019e\u019f\7E\2"+
		"\2\u019f\u01a0\7Q\2\2\u01a0\u01a1\7T\2\2\u01a1\u01a2\7F\2\2\u01a2R\3\2"+
		"\2\2\u01a3\u01a4\7T\2\2\u01a4\u01a5\7G\2\2\u01a5\u01a6\7R\2\2\u01a6\u01a7"+
		"\7G\2\2\u01a7\u01a8\7C\2\2\u01a8\u01a9\7V\2\2\u01a9T\3\2\2\2\u01aa\u01ab"+
		"\7U\2\2\u01ab\u01ac\7G\2\2\u01ac\u01ad\7V\2\2\u01adV\3\2\2\2\u01ae\u01af"+
		"\7V\2\2\u01af\u01b0\7J\2\2\u01b0\u01b1\7G\2\2\u01b1\u01b2\7P\2\2\u01b2"+
		"X\3\2\2\2\u01b3\u01b4\7V\2\2\u01b4\u01b5\7Q\2\2\u01b5Z\3\2\2\2\u01b6\u01b7"+
		"\7V\2\2\u01b7\u01b8\7[\2\2\u01b8\u01b9\7R\2\2\u01b9\u01ba\7G\2\2\u01ba"+
		"\\\3\2\2\2\u01bb\u01bc\7W\2\2\u01bc\u01bd\7P\2\2\u01bd\u01be\7V\2\2\u01be"+
		"\u01bf\7K\2\2\u01bf\u01c0\7N\2\2\u01c0^\3\2\2\2\u01c1\u01c2\7X\2\2\u01c2"+
		"\u01c3\7C\2\2\u01c3\u01c4\7T\2\2\u01c4`\3\2\2\2\u01c5\u01c6\7Y\2\2\u01c6"+
		"\u01c7\7J\2\2\u01c7\u01c8\7K\2\2\u01c8\u01c9\7N\2\2\u01c9\u01ca\7G\2\2"+
		"\u01cab\3\2\2\2\u01cb\u01cc\7Y\2\2\u01cc\u01cd\7K\2\2\u01cd\u01ce\7V\2"+
		"\2\u01ce\u01cf\7J\2\2\u01cfd\3\2\2\2\u01d0\u01d1\7-\2\2\u01d1f\3\2\2\2"+
		"\u01d2\u01d3\7/\2\2\u01d3h\3\2\2\2\u01d4\u01d5\7,\2\2\u01d5j\3\2\2\2\u01d6"+
		"\u01d7\7\61\2\2\u01d7l\3\2\2\2\u01d8\u01d9\7<\2\2\u01d9\u01da\7?\2\2\u01da"+
		"n\3\2\2\2\u01db\u01dc\7.\2\2\u01dcp\3\2\2\2\u01dd\u01de\7=\2\2\u01der"+
		"\3\2\2\2\u01df\u01e0\7<\2\2\u01e0t\3\2\2\2\u01e1\u01e2\7?\2\2\u01e2v\3"+
		"\2\2\2\u01e3\u01e4\7>\2\2\u01e4\u01e5\7@\2\2\u01e5x\3\2\2\2\u01e6\u01e7"+
		"\7>\2\2\u01e7z\3\2\2\2\u01e8\u01e9\7>\2\2\u01e9\u01ea\7?\2\2\u01ea|\3"+
		"\2\2\2\u01eb\u01ec\7@\2\2\u01ec\u01ed\7?\2\2\u01ed~\3\2\2\2\u01ee\u01ef"+
		"\7@\2\2\u01ef\u0080\3\2\2\2\u01f0\u01f1\7*\2\2\u01f1\u0082\3\2\2\2\u01f2"+
		"\u01f3\7+\2\2\u01f3\u0084\3\2\2\2\u01f4\u01f5\7]\2\2\u01f5\u0086\3\2\2"+
		"\2\u01f6\u01f7\7*\2\2\u01f7\u01f8\7\60\2\2\u01f8\u0088\3\2\2\2\u01f9\u01fa"+
		"\7_\2\2\u01fa\u008a\3\2\2\2\u01fb\u01fc\7\60\2\2\u01fc\u01fd\7+\2\2\u01fd"+
		"\u008c\3\2\2\2\u01fe\u01ff\7`\2\2\u01ff\u008e\3\2\2\2\u0200\u0201\7B\2"+
		"\2\u0201\u0090\3\2\2\2\u0202\u0203\7\60\2\2\u0203\u0092\3\2\2\2\u0204"+
		"\u0205\7\60\2\2\u0205\u0206\7\60\2\2\u0206\u0094\3\2\2\2\u0207\u0208\7"+
		"}\2\2\u0208\u0096\3\2\2\2\u0209\u020a\7\177\2\2\u020a\u0098\3\2\2\2\u020b"+
		"\u020c\7W\2\2\u020c\u020d\7P\2\2\u020d\u020e\7K\2\2\u020e\u020f\7V\2\2"+
		"\u020f\u009a\3\2\2\2\u0210\u0211\7K\2\2\u0211\u0212\7P\2\2\u0212\u0213"+
		"\7V\2\2\u0213\u0214\7G\2\2\u0214\u0215\7T\2\2\u0215\u0216\7H\2\2\u0216"+
		"\u0217\7C\2\2\u0217\u0218\7E\2\2\u0218\u0219\7G\2\2\u0219\u009c\3\2\2"+
		"\2\u021a\u021b\7W\2\2\u021b\u021c\7U\2\2\u021c\u021d\7G\2\2\u021d\u021e"+
		"\7U\2\2\u021e\u009e\3\2\2\2\u021f\u0220\7U\2\2\u0220\u0221\7V\2\2\u0221"+
		"\u0222\7T\2\2\u0222\u0223\7K\2\2\u0223\u0224\7P\2\2\u0224\u0225\7I\2\2"+
		"\u0225\u00a0\3\2\2\2\u0226\u0227\7K\2\2\u0227\u0228\7O\2\2\u0228\u0229"+
		"\7R\2\2\u0229\u022a\7N\2\2\u022a\u022b\7G\2\2\u022b\u022c\7O\2\2\u022c"+
		"\u022d\7G\2\2\u022d\u022e\7P\2\2\u022e\u022f\7V\2\2\u022f\u0230\7C\2\2"+
		"\u0230\u0231\7V\2\2\u0231\u0232\7K\2\2\u0232\u0233\7Q\2\2\u0233\u0234"+
		"\7P\2\2\u0234\u00a2\3\2\2\2\u0235\u0236\7V\2\2\u0236\u0237\7T\2\2\u0237"+
		"\u0238\7W\2\2\u0238\u0239\7G\2\2\u0239\u00a4\3\2\2\2\u023a\u023b\7H\2"+
		"\2\u023b\u023c\7C\2\2\u023c\u023d\7N\2\2\u023d\u023e\7U\2\2\u023e\u023f"+
		"\7G\2\2\u023f\u00a6\3\2\2\2\u0240\u0241\t\2\2\2\u0241\u0242\3\2\2\2\u0242"+
		"\u0243\bT\2\2\u0243\u00a8\3\2\2\2\u0244\u0245\7*\2\2\u0245\u0246\7,\2"+
		"\2\u0246\u024a\3\2\2\2\u0247\u0249\13\2\2\2\u0248\u0247\3\2\2\2\u0249"+
		"\u024c\3\2\2\2\u024a\u024b\3\2\2\2\u024a\u0248\3\2\2\2\u024b\u024d\3\2"+
		"\2\2\u024c\u024a\3\2\2\2\u024d\u024e\7,\2\2\u024e\u024f\7+\2\2\u024f\u0250"+
		"\3\2\2\2\u0250\u0251\bU\2\2\u0251\u00aa\3\2\2\2\u0252\u0256\7}\2\2\u0253"+
		"\u0255\13\2\2\2\u0254\u0253\3\2\2\2\u0255\u0258\3\2\2\2\u0256\u0257\3"+
		"\2\2\2\u0256\u0254\3\2\2\2\u0257\u0259\3\2\2\2\u0258\u0256\3\2\2\2\u0259"+
		"\u025a\7\177\2\2\u025a\u025b\3\2\2\2\u025b\u025c\bV\2\2\u025c\u00ac\3"+
		"\2\2\2\u025d\u0261\4C\\\2\u025e\u0260\t\3\2\2\u025f\u025e\3\2\2\2\u0260"+
		"\u0263\3\2\2\2\u0261\u025f\3\2\2\2\u0261\u0262\3\2\2\2\u0262\u00ae\3\2"+
		"\2\2\u0263\u0261\3\2\2\2\u0264\u026a\7)\2\2\u0265\u0266\7)\2\2\u0266\u0269"+
		"\7)\2\2\u0267\u0269\n\4\2\2\u0268\u0265\3\2\2\2\u0268\u0267\3\2\2\2\u0269"+
		"\u026c\3\2\2\2\u026a\u0268\3\2\2\2\u026a\u026b\3\2\2\2\u026b\u026d\3\2"+
		"\2\2\u026c\u026a\3\2\2\2\u026d\u026e\7)\2\2\u026e\u00b0\3\2\2\2\u026f"+
		"\u0271\4\62;\2\u0270\u026f\3\2\2\2\u0271\u0272\3\2\2\2\u0272\u0270\3\2"+
		"\2\2\u0272\u0273\3\2\2\2\u0273\u00b2\3\2\2\2\u0274\u0276\4\62;\2\u0275"+
		"\u0274\3\2\2\2\u0276\u0277\3\2\2\2\u0277\u0275\3\2\2\2\u0277\u0278\3\2"+
		"\2\2\u0278\u0285\3\2\2\2\u0279\u027b\7\60\2\2\u027a\u027c\4\62;\2\u027b"+
		"\u027a\3\2\2\2\u027c\u027d\3\2\2\2\u027d\u027b\3\2\2\2\u027d\u027e\3\2"+
		"\2\2\u027e\u0280\3\2\2\2\u027f\u0281\5\u00b5[\2\u0280\u027f\3\2\2\2\u0280"+
		"\u0281\3\2\2\2\u0281\u0283\3\2\2\2\u0282\u0279\3\2\2\2\u0282\u0283\3\2"+
		"\2\2\u0283\u0286\3\2\2\2\u0284\u0286\5\u00b5[\2\u0285\u0282\3\2\2\2\u0285"+
		"\u0284\3\2\2\2\u0286\u00b4\3\2\2\2\u0287\u0289\7G\2\2\u0288\u028a\t\5"+
		"\2\2\u0289\u0288\3\2\2\2\u0289\u028a\3\2\2\2\u028a\u028c\3\2\2\2\u028b"+
		"\u028d\4\62;\2\u028c\u028b\3\2\2\2\u028d\u028e\3\2\2\2\u028e\u028c\3\2"+
		"\2\2\u028e\u028f\3\2\2\2\u028f\u00b6\3\2\2\2\20\2\u024a\u0256\u0261\u0268"+
		"\u026a\u0272\u0277\u027d\u0280\u0282\u0285\u0289\u028e\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}